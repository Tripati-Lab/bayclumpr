[{"path":"https://tripati-lab.github.io/bayclumpr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 bayclumpr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://tripati-lab.github.io/bayclumpr/articles/bayclumpr.html","id":"performing-calibrations-using-bayclumpr","dir":"Articles","previous_headings":"","what":"Performing calibrations using bayclumpr","title":"bayclumpr","text":"First, need data work . can use bayclumpr generate simulated datasets uncertainty values described Roman-Palacios et al. (2022). example, simulate 50 observations low-eror scenario. Note functions bayclumpr expect users provide uncertainty terms standard deviation. resulting dataset stored ds object. Now, let’s start fitting different models simulated dataset. instance, let’s fit Deming regression model using cal.deming function bayclumpr: Alternatively, can fit unweighted weighted OLS regression using cal.ols cal.wols functions, respectively: York regression models also implemented bayclumpr: Finally, bayclumpr implements three types Bayesian linear models used calibrations temperature reconstructions. Let’s fit three models using cal.bayesian function: results stored BayesCal object corresponds stan objects summarizing posterior distributions parameters:","code":"ds <- cal.dataset(error = \"S1\", nobs = 50) head(ds) #>      x_TRUE Temperature    TempError    y_TRUE     D47error       D47 Material #> 1  9.621020    9.634830  0.013809939 0.6197873  0.007716876 0.6275041        1 #> 2 11.294539   11.279160 -0.015379377 0.6913561 -0.005063469 0.6862926        1 #> 3 12.672824   12.677899  0.005074617 0.7368449  0.013163797 0.7500087        1 #> 4  9.145524    9.112516 -0.033008011 0.6076046  0.007528553 0.6151331        1 #> 5 12.515311   12.488494 -0.026817078 0.7325361  0.012718265 0.7452543        1 #> 6 12.101163   12.092546 -0.008617473 0.7150980  0.007602091 0.7227001        1 cal.deming(data = ds, replicates = 10) #>        alpha       beta #> 1  0.2610362 0.03757038 #> 2  0.2744925 0.03657942 #> 3  0.2632748 0.03736999 #> 4  0.2757392 0.03643825 #> 5  0.2771174 0.03630381 #> 6  0.2757809 0.03645119 #> 7  0.2554563 0.03807484 #> 8  0.2742689 0.03657743 #> 9  0.2605953 0.03763314 #> 10 0.2613174 0.03744631 cal.ols(data = ds, replicates = 10) #>        alpha       beta #> 1  0.2807151 0.03581374 #> 2  0.2833936 0.03560239 #> 3  0.2721861 0.03652037 #> 4  0.2645816 0.03705486 #> 5  0.2655708 0.03699107 #> 6  0.2665814 0.03681482 #> 7  0.2659865 0.03688178 #> 8  0.2791944 0.03572168 #> 9  0.2687309 0.03668977 #> 10 0.2807427 0.03544070 cal.wols(data = ds, replicates = 10) #>        alpha       beta #> 1  0.2581159 0.03769787 #> 2  0.2721114 0.03644095 #> 3  0.2704972 0.03652860 #> 4  0.2695121 0.03635264 #> 5  0.2728458 0.03638455 #> 6  0.2702042 0.03641683 #> 7  0.2744926 0.03621376 #> 8  0.2730909 0.03633564 #> 9  0.2701180 0.03658784 #> 10 0.2697856 0.03686051 cal.york(data = ds, replicates = 10) #>        alpha       beta #> 1  0.2604107 0.03765476 #> 2  0.2754831 0.03646564 #> 3  0.2526801 0.03829245 #> 4  0.2535957 0.03821676 #> 5  0.2650827 0.03729838 #> 6  0.2761390 0.03639921 #> 7  0.2647131 0.03733402 #> 8  0.2751992 0.03650266 #> 9  0.2724576 0.03675413 #> 10 0.2633915 0.03740793 BayesCal <- cal.bayesian(calibrationData = ds, numSavedSteps = 3000, priors = \"Weak\") BayesCal"},{"path":"https://tripati-lab.github.io/bayclumpr/articles/bayclumpr.html","id":"reconstructing-temperatures-in-bayclumpr","dir":"Articles","previous_headings":"","what":"Reconstructing temperatures in bayclumpr","title":"bayclumpr","text":"bayclumpr implements two functions perform temperature reconstructions frequentist (rec.clumped) Bayesian frameworks (rec.bayesian). Let’s review functions work generating synthetic dataset two samples. calibration step, bayclumpr expects uncertainty (D47error) expressed terms standard deviation. Note recData object generated includes smallest number columns needed perform reconstructions bayclumpr. point, need either specify distribution parameter estimates calibration step. instance, let’s assume interested reconstructing temperatures recData OLS model. First, run calibration analyses: point, can use rec.clumped reconstruct temperatures based reconstruction dataset (recData argument) observed calibration object (obCal argument): resulting object includes information template reconstruction dataset also information reconstructed temperature associated uncertainty (1 SD). Let’s now perform reconstructions Bayesian framework. , need parameter estimates derived calibration step (see BayesCal created ). perform reconstructions single Bayesian models equivalent OLS fit Bayesian framework (BayesCal$BLM1_fit_NoErrors). associated reconstructions Bayesian model shown : Alternatively, explicitly account uncertainty measured \\(delta_{47}\\) performing reconstructions: Results model follow,","code":"recData <- data.frame(Sample = paste(\"Sample\", 1:9),                        D47 = rep(c(0.6, 0.7, 0.8), 3),                        D47error = c(rep(0.005,3), rep(0.01,3), rep(0.02,3)),                       N = rep(2, 9),                       Material = rep(1, 9)) paramdist <- cal.ols(data = ds, replicates = 10) rec.clumped(recData = recData, obCal = paramdist) #>     Sample D47 D47error  meanTemp    error #> 1 Sample 1 0.6    0.005  59.74079 2.508955 #> 2 Sample 2 0.7    0.005  18.26387 1.687580 #> 3 Sample 3 0.8    0.005 -10.78189 1.233618 #> 4 Sample 4 0.6    0.010  59.74079 4.962024 #> 5 Sample 5 0.7    0.010  18.26387 3.346178 #> 6 Sample 6 0.8    0.010 -10.78189 2.449998 #> 7 Sample 7 0.6    0.020  59.74079 9.708574 #> 8 Sample 8 0.7    0.020  18.26387 6.579673 #> 9 Sample 9 0.8    0.020 -10.78189 4.832619 PredsBay <- rec.bayesian(calModel = BayesCal$BLM1_fit_NoErrors, recData = recData, iter = 10000, postcalsamples = 100) PredsBay #>     Sample D47 D47error  meanTemp     error #> 1 Sample 1 0.6    0.005  60.03599 0.6944797 #> 2 Sample 2 0.7    0.005  18.72604 0.4627419 #> 3 Sample 3 0.8    0.005 -10.25745 0.3411406 #> 4 Sample 4 0.6    0.010  60.03071 0.6802283 #> 5 Sample 5 0.7    0.010  18.72454 0.4604003 #> 6 Sample 6 0.8    0.010 -10.25018 0.3387403 #> 7 Sample 7 0.6    0.020  60.03582 0.7009288 #> 8 Sample 8 0.7    0.020  18.72146 0.4568634 #> 9 Sample 9 0.8    0.020 -10.25708 0.3412534 PredsBay.alt <- rec.bayesian.alt(calModel = BayesCal$BLM1_fit_NoErrors, recData = recData, iter = 20000, postcalsamples = 100) PredsBay.alt #>     Sample D47 D47error   meanTemp    error #> 1 Sample 1 0.6    0.005  59.755638 2.628036 #> 2 Sample 2 0.7    0.005  18.566108 1.745583 #> 3 Sample 3 0.8    0.005 -10.287071 1.284279 #> 4 Sample 4 0.6    0.010  59.619945 5.016108 #> 5 Sample 5 0.7    0.010  18.749394 3.424857 #> 6 Sample 6 0.8    0.010 -10.435046 2.450868 #> 7 Sample 7 0.6    0.020  60.450981 9.512383 #> 8 Sample 8 0.7    0.020  18.832177 7.137571 #> 9 Sample 9 0.8    0.020  -9.978939 4.925871"},{"path":"https://tripati-lab.github.io/bayclumpr/articles/bayclumpr.html","id":"outlook","dir":"Articles","previous_headings":"","what":"Outlook","title":"bayclumpr","text":"reviewed fundamental aspects using bayclumpr. advances analyses involving alternative priors Bayesian models option.","code":""},{"path":"https://tripati-lab.github.io/bayclumpr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Cristian Roman Palacios. Author, maintainer. Hannah M. Carroll. Author. Aradhna Tripati. Author.","code":""},{"path":"https://tripati-lab.github.io/bayclumpr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Roman Palacios C, Carroll H, Tripati (2022). bayclumpr: Bayesian Analysis Clumped Isotope Datasets. https://bayclump.tripatilab.epss.ucla.edu/, https://tripati-lab.github.io/bayclumpr/.","code":"@Manual{,   title = {bayclumpr: Bayesian Analysis of Clumped Isotope Datasets},   author = {Cristian {Roman Palacios} and Hannah M. Carroll and Aradhna Tripati},   year = {2022},   note = {https://bayclump.tripatilab.epss.ucla.edu/, https://tripati-lab.github.io/bayclumpr/}, }"},{"path":[]},{"path":[]},{"path":"https://tripati-lab.github.io/bayclumpr/index.html","id":"what-is-bayclumpr","dir":"","previous_headings":"","what":"What is bayclumpr?","title":"Bayesian Analysis of Clumped Isotope Datasets","text":"support use Bayesian models analytical framework developed Román-Palacios et al. (2022) clumped isotope calibration temperature reconstructions, facilitate comparisons Bayesian classical models, present self-contained R package associated Shiny Dashboard application, bayclumpr BayClump, respectively. bayclumpr (BayClump) fits frequentist Bayesian linear regressions calibration datasets performs temperature reconstructions frameworks. can find details use bayclumpr website.","code":""},{"path":"https://tripati-lab.github.io/bayclumpr/index.html","id":"what-is-bayclump","dir":"","previous_headings":"","what":"What is BayClump?","title":"Bayesian Analysis of Clumped Isotope Datasets","text":"BayClump associated Shiny Dashboard application associated bayclumpr R package. functions implemented BayClump sourced bayclumpr. eveloped BayClump allow users less coding experience able access standarized resources calibrate derive reconstructions using clumped isotope datasets. can access BayClump directly .","code":""},{"path":"https://tripati-lab.github.io/bayclumpr/index.html","id":"installing-bayclumpr","dir":"","previous_headings":"","what":"Installing bayclumpr","title":"Bayesian Analysis of Clumped Isotope Datasets","text":"latest version bayclumpr can installed directly GitHub repository using following lines code R","code":"library(devtools) install_github(\"Tripati-Lab/bayclumpr\")"},{"path":"https://tripati-lab.github.io/bayclumpr/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Bayesian Analysis of Clumped Isotope Datasets","text":"Please see contributing guide.","code":""},{"path":"https://tripati-lab.github.io/bayclumpr/index.html","id":"contact","dir":"","previous_headings":"","what":"Contact","title":"Bayesian Analysis of Clumped Isotope Datasets","text":"Please see package DESCRIPTION package authors.","code":""},{"path":"https://tripati-lab.github.io/bayclumpr/reference/cal.bayesian.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayesian regressions to calibrate the clumped isotopes paleothermometer using\nstan. — cal.bayesian","title":"Bayesian regressions to calibrate the clumped isotopes paleothermometer using\nstan. — cal.bayesian","text":"Bayesian regressions calibrate clumped isotopes paleothermometer using stan.","code":""},{"path":"https://tripati-lab.github.io/bayclumpr/reference/cal.bayesian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayesian regressions to calibrate the clumped isotopes paleothermometer using\nstan. — cal.bayesian","text":"","code":"cal.bayesian(calibrationData, numSavedSteps = 3000, priors = \"Informative\")"},{"path":"https://tripati-lab.github.io/bayclumpr/reference/cal.bayesian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayesian regressions to calibrate the clumped isotopes paleothermometer using\nstan. — cal.bayesian","text":"calibrationData target calibration dataset. numSavedSteps Number MCMC iterations save. priors Either Informative, Weak, Uninformative slope intercept.","code":""},{"path":"https://tripati-lab.github.io/bayclumpr/reference/cal.ci.html","id":null,"dir":"Reference","previous_headings":"","what":"This function is used to generate CI estimates at given intervals. It is currently\nused for plotting in BayClump. — cal.ci","title":"This function is used to generate CI estimates at given intervals. It is currently\nused for plotting in BayClump. — cal.ci","text":"function used generate CI estimates given intervals. currently used plotting BayClump.","code":""},{"path":"https://tripati-lab.github.io/bayclumpr/reference/cal.ci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function is used to generate CI estimates at given intervals. It is currently\nused for plotting in BayClump. — cal.ci","text":"","code":"cal.ci(data, from, to, length.out = 100)"},{"path":"https://tripati-lab.github.io/bayclumpr/reference/cal.ci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function is used to generate CI estimates at given intervals. It is currently\nused for plotting in BayClump. — cal.ci","text":"data data.frame two columns named beta alpha. result bootstrapping posterior distribution given calibration set. lower limit x. upper limit x. length.number breaks.","code":""},{"path":"https://tripati-lab.github.io/bayclumpr/reference/cal.dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a synthetic dataset for clumped isotopes calibrations — cal.dataset","title":"Generate a synthetic dataset for clumped isotopes calibrations — cal.dataset","text":"Generate synthetic dataset clumped isotopes calibrations","code":""},{"path":"https://tripati-lab.github.io/bayclumpr/reference/cal.dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a synthetic dataset for clumped isotopes calibrations — cal.dataset","text":"","code":"cal.dataset(error = \"S1\", nobs = 1000)"},{"path":"https://tripati-lab.github.io/bayclumpr/reference/cal.dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a synthetic dataset for clumped isotopes calibrations — cal.dataset","text":"error Error scenario: low (S1), Intermediate (S2), High (S3) nobs Number observations simulated dataset","code":""},{"path":"https://tripati-lab.github.io/bayclumpr/reference/cal.deming.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Deming regression models on a given calibration dataset — cal.deming","title":"Fit Deming regression models on a given calibration dataset — cal.deming","text":"Fit Deming regression models given calibration dataset","code":""},{"path":"https://tripati-lab.github.io/bayclumpr/reference/cal.deming.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Deming regression models on a given calibration dataset — cal.deming","text":"","code":"cal.deming(data, replicates)"},{"path":"https://tripati-lab.github.io/bayclumpr/reference/cal.deming.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Deming regression models on a given calibration dataset — cal.deming","text":"data calibration dataset replicates Number bootstrap replicates","code":""},{"path":"https://tripati-lab.github.io/bayclumpr/reference/cal.ols.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit OLS regression models on a given calibration dataset — cal.ols","title":"Fit OLS regression models on a given calibration dataset — cal.ols","text":"Fit OLS regression models given calibration dataset","code":""},{"path":"https://tripati-lab.github.io/bayclumpr/reference/cal.ols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit OLS regression models on a given calibration dataset — cal.ols","text":"","code":"cal.ols(data, replicates)"},{"path":"https://tripati-lab.github.io/bayclumpr/reference/cal.ols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit OLS regression models on a given calibration dataset — cal.ols","text":"data calibration dataset replicates Number bootstrap replicates","code":""},{"path":"https://tripati-lab.github.io/bayclumpr/reference/cal.prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a dataset reflecting the priors used to run the analyses — cal.prior","title":"Generate a dataset reflecting the priors used to run the analyses — cal.prior","text":"Generate dataset reflecting priors used run analyses","code":""},{"path":"https://tripati-lab.github.io/bayclumpr/reference/cal.prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a dataset reflecting the priors used to run the analyses — cal.prior","text":"","code":"cal.prior(prior, n = 1000)"},{"path":"https://tripati-lab.github.io/bayclumpr/reference/cal.prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a dataset reflecting the priors used to run the analyses — cal.prior","text":"prior Informative n number observations simulate","code":""},{"path":"https://tripati-lab.github.io/bayclumpr/reference/cal.wols.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit weighted OLS regression models on a given calibration dataset — cal.wols","title":"Fit weighted OLS regression models on a given calibration dataset — cal.wols","text":"Fit weighted OLS regression models given calibration dataset","code":""},{"path":"https://tripati-lab.github.io/bayclumpr/reference/cal.wols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit weighted OLS regression models on a given calibration dataset — cal.wols","text":"","code":"cal.wols(data, replicates)"},{"path":"https://tripati-lab.github.io/bayclumpr/reference/cal.wols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit weighted OLS regression models on a given calibration dataset — cal.wols","text":"data calibration dataset replicates Number bootstrap replicates","code":""},{"path":"https://tripati-lab.github.io/bayclumpr/reference/cal.york.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit York regression models on a given calibration dataset — cal.york","title":"Fit York regression models on a given calibration dataset — cal.york","text":"Fit York regression models given calibration dataset","code":""},{"path":"https://tripati-lab.github.io/bayclumpr/reference/cal.york.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit York regression models on a given calibration dataset — cal.york","text":"","code":"cal.york(data, replicates)"},{"path":"https://tripati-lab.github.io/bayclumpr/reference/cal.york.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit York regression models on a given calibration dataset — cal.york","text":"data calibration dataset replicates Number bootstrap replicates","code":""},{"path":"https://tripati-lab.github.io/bayclumpr/reference/rec.bayesian.alt.html","id":null,"dir":"Reference","previous_headings":"","what":"This function generate temperature predictions (in 10^6/T2) based on a\ncalibration dataset and target D47. Note that this approach additionally\naccounts for measured error in the target D47. — rec.bayesian.alt","title":"This function generate temperature predictions (in 10^6/T2) based on a\ncalibration dataset and target D47. Note that this approach additionally\naccounts for measured error in the target D47. — rec.bayesian.alt","text":"function generate temperature predictions (10^6/T2) based calibration dataset target D47. Note approach additionally accounts measured error target D47.","code":""},{"path":"https://tripati-lab.github.io/bayclumpr/reference/rec.bayesian.alt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function generate temperature predictions (in 10^6/T2) based on a\ncalibration dataset and target D47. Note that this approach additionally\naccounts for measured error in the target D47. — rec.bayesian.alt","text":"","code":"rec.bayesian.alt(   calModel,   recData,   iter = 1000,   priors = \"Uninformative\",   prior_mu = 11,   prior_sig = 5,   mixed = FALSE,   postcalsamples = NULL )"},{"path":"https://tripati-lab.github.io/bayclumpr/reference/rec.bayesian.alt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function generate temperature predictions (in 10^6/T2) based on a\ncalibration dataset and target D47. Note that this approach additionally\naccounts for measured error in the target D47. — rec.bayesian.alt","text":"calModel stan model analyzed. recData reconstruction dataset. iter Number replicates retain. priors Whether priors Uninformative temperature. prior_mu Prior mean temperature (scale = 10^6/T2, T K) priors Uninformative. prior_sig Prior sd temperature (scale = 10^6/T2, T K) priors Uninformative. mixed whether model calModel mixed . postcalsamples Number posterior samples analyze calibration step.","code":""},{"path":"https://tripati-lab.github.io/bayclumpr/reference/rec.bayesian.html","id":null,"dir":"Reference","previous_headings":"","what":"This function generate temperature predictions (in 10^6/T2) based on a\ncalibration dataset and target D47. — rec.bayesian","title":"This function generate temperature predictions (in 10^6/T2) based on a\ncalibration dataset and target D47. — rec.bayesian","text":"function generate temperature predictions (10^6/T2) based calibration dataset target D47.","code":""},{"path":"https://tripati-lab.github.io/bayclumpr/reference/rec.bayesian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function generate temperature predictions (in 10^6/T2) based on a\ncalibration dataset and target D47. — rec.bayesian","text":"","code":"rec.bayesian(   calModel,   recData,   iter = 1000,   priors = \"Uninformative\",   prior_mu = 11,   prior_sig = 5,   mixed = FALSE,   postcalsamples = NULL )"},{"path":"https://tripati-lab.github.io/bayclumpr/reference/rec.bayesian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function generate temperature predictions (in 10^6/T2) based on a\ncalibration dataset and target D47. — rec.bayesian","text":"calModel stan model analyzed. recData reconstruction dataset. iter Number replicates retain. priors Whether priors Uninformative temperature. prior_mu Prior mean temperature (scale = 10^6/T2, T K) priors Uninformative. prior_sig Prior sd temperature (scale = 10^6/T2, T K) priors Uninformative. mixed whether model calModel mixed . postcalsamples Number posterior samples analyze calibration step.","code":""},{"path":"https://tripati-lab.github.io/bayclumpr/reference/rec.clumped.html","id":null,"dir":"Reference","previous_headings":"","what":"This function performs temp reconstruction (10^6/T^2 with T in K) for\nmultiple replicates of the same target. — rec.clumped","title":"This function performs temp reconstruction (10^6/T^2 with T in K) for\nmultiple replicates of the same target. — rec.clumped","text":"function performs temp reconstruction (10^6/T^2 T K) multiple replicates target.","code":""},{"path":"https://tripati-lab.github.io/bayclumpr/reference/rec.clumped.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function performs temp reconstruction (10^6/T^2 with T in K) for\nmultiple replicates of the same target. — rec.clumped","text":"","code":"rec.clumped(recData, obCal)"},{"path":"https://tripati-lab.github.io/bayclumpr/reference/rec.clumped.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function performs temp reconstruction (10^6/T^2 with T in K) for\nmultiple replicates of the same target. — rec.clumped","text":"recData Reconstruction dataset obCal data.frame summarizing distribution slopes intercepts","code":""},{"path":"https://tripati-lab.github.io/bayclumpr/reference/rec.prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a dataset reflecting the priors used to run the analyses — rec.prior","title":"Generate a dataset reflecting the priors used to run the analyses — rec.prior","text":"Generate dataset reflecting priors used run analyses","code":""},{"path":"https://tripati-lab.github.io/bayclumpr/reference/rec.prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a dataset reflecting the priors used to run the analyses — rec.prior","text":"","code":"rec.prior(prior, n = 1000)"},{"path":"https://tripati-lab.github.io/bayclumpr/reference/rec.prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a dataset reflecting the priors used to run the analyses — rec.prior","text":"prior Informative n number observations simulate","code":""}]
